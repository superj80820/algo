// package main

// import (
// 	"encoding/json"
// 	"fmt"
// 	"os"
// 	"strings"
// )

// type AutoGenerated []struct {
// 	Neetcode150 string `json:"neetcode150,omitempty"`
// 	Blind75     string `json:"blind75,omitempty"`
// 	Problem     string `json:"problem"`
// 	Pattern     string `json:"pattern"`
// 	Link        string `json:"link"`
// 	Video       string `json:"video"`
// 	Difficulty  string `json:"difficulty"`
// 	Python      string `json:"python,omitempty"`
// 	Java        string `json:"java,omitempty"`
// 	Cpp         string `json:"cpp,omitempty"`
// 	Javascript  string `json:"javascript,omitempty"`
// 	Code        string `json:"code"`
// 	C           string `json:"c,omitempty"`
// 	Csharp      string `json:"csharp,omitempty"`
// 	Typescript  string `json:"typescript,omitempty"`
// 	Go          string `json:"go,omitempty"`
// 	Ruby        string `json:"ruby,omitempty"`
// 	Swift       string `json:"swift,omitempty"`
// 	Kotlin      string `json:"kotlin,omitempty"`
// 	Rust        string `json:"rust,omitempty"`
// 	Scala       string `json:"scala,omitempty"`
// 	Dart        string `json:"dart,omitempty"`
// 	Premium     string `json:"premium,omitempty"`
// 	FreeLink    string `json:"freeLink,omitempty"`
// }

// func main() {
// 	data, err := os.ReadFile("./script/difficulty.json")
// 	if err != nil {
// 		fmt.Println("err", err)
// 		return
// 	}
// 	var a AutoGenerated
// 	err = json.Unmarshal(data, &a)
// 	if err != nil {
// 		fmt.Println("err", err)
// 		return
// 	}
// 	aMap := make(map[string]string)
// 	for _, val := range a {
// 		firstDashIdx := strings.Index(val.Code, "-")
// 		fmt.Println(val.Code[:firstDashIdx], val.Code, strings.ToLower(val.Difficulty))
// 		aMap[val.Code[:firstDashIdx]] = strings.ToLower(val.Difficulty)
// 	}

// 	files, err := os.ReadDir("./neetcode")
// 	if err != nil {
// 		panic(err)
// 	}
// 	for _, file := range files {
// 		fileName := file.Name()

// 		firstDashIdx := strings.Index(fileName, "-")
// 		codeNum := fileName[:firstDashIdx]
// 		fmt.Println(codeNum, aMap[codeNum])

// 		if fileName[len(fileName)-8:] == "_test.go" {
// 			continue
// 		}
// 		data, err := os.ReadFile("./neetcode/" + fileName)
// 		if err != nil {
// 			panic(err)
// 		}
// 		fileString := string(data)
// 		var firstLineEndIdx int
// 		for idx, str := range fileString {
// 			if str == '\n' {
// 				firstLineEndIdx = idx
// 				break
// 			}
// 		}
// 		firstLine := fileString[:firstLineEndIdx]
// 		content := firstLine + ", " + aMap[codeNum] + "\n" + fileString[firstLineEndIdx+1:]
// 		fmt.Println(content)

// 		os.WriteFile("./neetcode/"+fileName, []byte(content), 0644)
// 	}
// }
